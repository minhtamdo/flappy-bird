/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenhard_screen/ScreenHardViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenHardViewBase::ScreenHardViewBase() :
    flexButtonCallback(this, &ScreenHardViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &ScreenHardViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    button1.setXY(240, -58);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    button1.setAction(buttonCallback);
    add(button1);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_FLAPPY_BIRD_NIGHT_BACKDROP_ID));
    add(image1);

    bird.setXY(30, 143);
    bird.setBitmap(touchgfx::Bitmap(BITMAP_BIRDHEHE_ID));
    add(bird);

    score.setXY(18, 0);
    score.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    score.setLinespacing(0);
    score.setTypedText(touchgfx::TypedText(T_SCORE));
    add(score);

    boxWithBorder1.setPosition(153, -182, 50, 291);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(73, 121, 130));
    add(boxWithBorder1);

    boxWithBorder2.setPosition(153, 179, 50, 291);
    boxWithBorder2.setColor(touchgfx::Color::getColorFromRGB(73, 121, 130));
    add(boxWithBorder2);

    blackbox.setPosition(180, 0, 60, 320);
    blackbox.setColor(touchgfx::Color::getColorFromRGB(15, 19, 51));
    add(blackbox);

    shield.setXY(8, 126);
    shield.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_SHIELD_80_80_7754B8_SVG_ID));
    shield.setAlpha(193);
    add(shield);

    flexButton1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_30_30_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_30_30_E8F6FB_SVG_ID));
    flexButton1.setIconXY(0, 0);
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(210, 0, 30, 30);
    add(flexButton1);
}

ScreenHardViewBase::~ScreenHardViewBase()
{

}

void ScreenHardViewBase::setupScreen()
{

}

void ScreenHardViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to ScreenMenu
        //Go to ScreenMenu with screen transition towards East
        application().gotoScreenMenuScreenSlideTransitionEast();
    }
}

void ScreenHardViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction2
        //When button1 clicked change screen to ScreenHighScore
        //Go to ScreenHighScore with screen transition towards East
        application().gotoScreenHighScoreScreenSlideTransitionEast();
    }
}
